# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: "CI/CD for Go"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
#  get-next-version:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 19
#      - run: npx semantic-release -e semantic-release-monorepo --dry-run
#        id: get-next-version
#        env:
#          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}
#    outputs:
#      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
#      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}

  get-next-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Semantic Release
        id: get-next-version
        uses: cycjimmy/semantic-release-action@v3
        with:
          dry_run: true
          semantic_version: 20.0.2
          # you can set branch for semantic-release older than v16.
          branch: feat/workflow-build
          # You can specify specifying version range for the extra plugins if you prefer.
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/release-notes-generator
            @semantic-release/commit-analyzer
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: test
        run: pwd && ls -la && set
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 19
#      - run: npx semantic-release -e semantic-release-monorepo --dry-run
#        id: get-next-version
#        env:
#          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}
#    outputs:
#      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
#      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}


  build:
    runs-on: ubuntu-latest
    needs: get-next-version
    if: needs.get-next-version.outputs.new-release-published == 'true'
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go environment
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      shell: bash
      env:
        APP_VERSION: ${{ env.NEXT_RELEASE_VERSION }}
      run: |
        echo "new release version: ${{ env.APP_VERSION }}"
        chmod u+x build.sh
        ./build.sh ${{ env.APP_VERSION }}

    - name: Test
      shell: bash
      run: |
        chmod u+x test.sh
        ./test.sh

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - run: npm ci
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}