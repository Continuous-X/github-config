# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: "CI/CD for Go"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 19
        registry-url: https://npm.pkg.github.com/
        scope: "@swagger-api"

    - name: Determine the next release version
      uses: cycjimmy/semantic-release-action@v3
      id: get-new-version
      with:
        dry_run: true
        extra_plugins: |
          @semantic-release/git
          @semantic-release/exec
      env:
        GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Nothing to release
      if: ${{ env.NEXT_RELEASE_VERSION == '' }}
      uses: actions/github-script@v6
      with:
        script: |
          core.setFailed('Nothing to release')

    - name: Set up Go environment
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      shell: bash
      env:
        APP_VERSION: ${{ env.NEXT_RELEASE_VERSION }}
      run: |
        echo "new release version: ${{ env.APP_VERSION }}"
        chmod u+x build.sh
        ./build.sh ${{ env.APP_VERSION }}

    - name: Test
      shell: bash
      run: |
        chmod u+x test.sh
        ./test.sh
